{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/menu/menu.component.ts","webpack:///src/app/core/menu/menu.component.html","webpack:///src/app/flat-booking/flat-booking.component.ts","webpack:///src/app/flat-booking/flat-booking.component.html","webpack:///src/app/flat-contact/flat-contact.component.ts","webpack:///src/app/flat-contact/flat-contact.component.html","webpack:///src/app/flat-detail/flat-detail.component.ts","webpack:///src/app/flat-detail/flat-detail.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/flats.service.ts","webpack:///src/app/services/lodger.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","declarations","entryComponents","schemas","providers","bootstrap","FooterComponent","MenuComponent","router","navLinks","label","link","activeLinkIndex","events","subscribe","res","indexOf","find","tab","url","FlatBookingComponent","document","data","fb","lodgerService","dialogRef","submitted","today","Date","contactForm","group","startDate","required","endDate","lastName1","firstName1","phoneNumber1","email1","email","pattern","dateOfBirth1","address1","zipCode1","location1","lastName2","firstName2","phoneNumber2","email2","dateOfBirth2","address2","zipCode2","location2","flatId","console","table","value","invalid","addLodger","navigate","setTimeout","loadPdf","close","createElement","target","href","PDF_LOCAL","click","remove","controls","onSubmit","closeDialog","Document","FlatContactComponent","FlatDetailComponent","route","flatsService","dialog","paramMap","p","get","getFlat","response","flat","log","error","open","height","width","name","openDialog","HomeComponent","loadFlats","getFlats","flats","FlatsService","http","REST_SERVER_LOCAL","providedIn","LodgerService","lodger","post","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAMC,MAAM,GAAW,CACrB;AAACC,YAAI,EAAE,EAAP;AAAWC,iBAAS,EAAE;AAAtB,OADqB,EAErB;AAACD,YAAI,EAAE,YAAP;AAAqBC,iBAAS,EAAE;AAAhC,OAFqB,EAGrB;AAACD,YAAI,EAAE,eAAP;AAAwBC,iBAAS,EAAE;AAAnC,OAHqB,EAIrB;AAACD,YAAI,EAAE,WAAP;AAAoBC,iBAAS,EAAE;AAA/B,OAJqB,EAKrB;AAACD,YAAI,EAAE,eAAP;AAAwBC,iBAAS,EAAE;AAAnC,OALqB,CAAvB;;UAYaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBG,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaQ,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,SAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;AACA;;;;;;;;;wEDKaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoEaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBANT,CACT,iFADS,EAET;AAACC,iBAAO,EAAE,iEAAV;AAA4BC,kBAAQ,EAAE;AAAtC,SAFS,CAEkD;AAFlD,S;AAGV,kBA3BQ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,wEANO,EAOP,yEAPO,EAQP,iFARO,EASP,gFATO,EAUP,2EAVO,EAWP,mEAXO,EAYP,uEAZO,EAaP,2DAbO,EAcP,8EAdO,EAeP,sEAfO,CA2BR;;;;4HAGUF,S,EAAS;AAAA,yBAtClB,2DAsCkB,EArClB,uEAqCkB,EApClB,sFAoCkB,EAnClB,0FAmCkB,EAlClB,mEAkCkB,EAjClB,0FAiCkB,EAhClB,8EAgCkB;AAhCH,oBAGf,uEAHe,EAIf,oEAJe,EAKf,4FALe,EAMf,oEANe,EAOf,oEAPe,EAQf,wEARe,EASf,yEATe,EAUf,iFAVe,EAWf,gFAXe,EAYf,2EAZe,EAaf,mEAbe,EAcf,uEAde,EAef,2DAfe,EAgBf,8EAhBe,EAiBf,sEAjBe;AAgCG,S;AAfF,O;;;;;wEAePA,S,EAAS;gBAxCrB,sDAwCqB;iBAxCZ;AACRG,wBAAY,EAAE,CACZ,2DADY,EAEZ,uEAFY,EAGZ,sFAHY,EAIZ,0FAJY,EAKZ,mEALY,EAMZ,0FANY,EAOZ,8EAPY,CADN;AAURT,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,wEANO,EAOP,yEAPO,EAQP,iFARO,EASP,gFATO,EAUP,2EAVO,EAWP,mEAXO,EAYP,uEAZO,EAaP,2DAbO,EAcP,8EAdO,EAeP,sEAfO,CAVD;AA2BRU,2BAAe,EAAE,CACf,0FADe,CA3BT;AA8BRC,mBAAO,EAAE,CACP,oEADO,EAEP,8DAFO,CA9BD;AAkCRC,qBAAS,EAAE,CACT,iFADS,EAET;AAACL,qBAAO,EAAE,iEAAV;AAA4BC,sBAAQ,EAAE;AAAtC,aAFS,CAEkD;AAFlD,aAlCH;AAsCRK,qBAAS,EAAE,CAAC,2DAAD;AAtCH,W;AAwCY,U;;;;;;;;;;;;;;;;;;ACpEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,+B;AAAA;AAAA;ACP5B;;AACI;;AAAG;;AAA4E;;AACnF;;;;;;;;wEDKaA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTX,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AAKD;;AACD;;;;;;;;AAJE,+FAAwB,QAAxB,EAAwB,YAAxB;;AAGD;;AAAA;;;;UDGUU,a;AAeX;AACA;AACA;AACA,+BAAoBC,MAApB,EAAoC;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA,CAAgB,CAhBpC;AACA;AACA;;AACA,eAAAC,QAAA,GAAW,CACT;AAAEC,iBAAK,EAAE,cAAT;AAAyBC,gBAAI,EAAE;AAA/B,WADS,EAET;AAAED,iBAAK,EAAE,aAAT;AAAwBC,gBAAI,EAAE;AAA9B,WAFS,EAGT;AAAED,iBAAK,EAAE,YAAT;AAAuBC,gBAAI,EAAE;AAA7B,WAHS,EAIT;AAAED,iBAAK,EAAE,cAAT;AAAyBC,gBAAI,EAAE;AAA/B,WAJS,EAKT;AAAED,iBAAK,EAAE,YAAT;AAAuBC,gBAAI,EAAE;AAA7B,WALS,EAMT;AAAED,iBAAK,EAAE,SAAT;AAAoBC,gBAAI,EAAE;AAA1B,WANS,CAAX;AAQA,eAAAC,eAAA,GAA0B,CAAC,CAA3B;AAKuC,S,CAEvC;AACA;AACA;;;;;qCACW;AAAA;;AACT,iBAAKJ,MAAL,CAAYK,MAAZ,CAAmBC,SAAnB,CAA6B,UAACC,GAAD,EAAS;AACtC,mBAAI,CAACH,eAAL,GAAuB,KAAI,CAACH,QAAL,CAAcO,OAAd,CAAsB,KAAI,CAACP,QAAL,CAAcQ,IAAd,CAAmB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACP,IAAJ,KAAa,MAAM,KAAI,CAACH,MAAL,CAAYW,GAAnC;AAAA,eAAtB,CAAtB,CAAvB,CADsC,CACsE;AAC7G,aAFC;AAGD;;;;;;;yBA3BUZ,a,EAAa,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA,+O;AAAA;AAAA;ACT1B;;AACI;;AAOF;;;;AANE;;AAAA;;;;;;;;;wEDOSA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTZ,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUQ;;AAAyC;;AAAiC;;;;;;AAD5E;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAQL;;AAAuC;;AAA+B;;;;;;AADxE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAaH;;AAAyC;;AAAsB;;;;;;AADjE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUL;;AAA0C;;AAAyB;;;;;;AADrE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAYL;;AAAsC;;AAAiC;;;;;;AACvE;;AAAqC;;AAAiC;;;;;;AAFxE;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;;;AAUL;;AAA4C;;AAAqC;;;;;;AADnF;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUL;;AAA4C;;AAAqC;;;;;;AADnF;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUT;;AAAwC;;AAA0B;;;;;;AADpE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUD;;AAAwC;;AAA8B;;;;;;AADxE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAUL;;AAAyC;;AAAyB;;;;;;AADpE;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;;;SDjGf;AACA;AACA;;;UAMauB,oB;AAmCX;AACA;AACA;AACA,sCAAsCC,QAAtC,EAA0FC,IAA1F,EAA6GC,EAA7G,EAAsIC,aAAtI,EAA4KhB,MAA5K,EAAoMiB,SAApM,EAAmP;AAAA;;AAA7M,eAAAJ,QAAA,GAAAA,QAAA;AAAoD,eAAAC,IAAA,GAAAA,IAAA;AAAmB,eAAAC,EAAA,GAAAA,EAAA;AAAyB,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAhB,MAAA,GAAAA,MAAA;AAAwB,eAAAiB,SAAA,GAAAA,SAAA;AA/BpM,eAAAC,SAAA,GAAqB,KAArB,CA+BmP,CA/BvN;;AAC5B,eAAAC,KAAA,GAAQ,IAAIC,IAAJ,EAAR;AAEA,eAAAC,WAAA,GAAc,KAAKN,EAAL,CAAQO,KAAR,CAAc;AAC1B5C,cAAE,EAAE,CAAC,IAAD,CADsB;AAE1B6C,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAFe;AAG1BC,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAHiB;AAI1BE,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAJe;AAK1BG,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CALc;AAM1BI,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CANY;AAO1BK,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,EAAsB,0DAAWM,KAAjC,EAAwC,0DAAWC,OAAnD,CAAL,CAPkB;AAQ1BC,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CARY;AAS1BS,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB,CATgB;AAU1BU,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWV,QAAhB,CAVgB;AAW1BW,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWX,QAAhB,CAXe;AAY1BY,qBAAS,EAAE,CAAC,EAAD,CAZe;AAa1BC,sBAAU,EAAE,CAAC,EAAD,CAbc;AAc1BC,wBAAY,EAAE,CAAC,EAAD,CAdY;AAe1BC,kBAAM,EAAE,CAAC,EAAD,CAfkB;AAgB1BC,wBAAY,EAAE,CAAC,EAAD,CAhBY;AAiB1BC,oBAAQ,EAAE,CAAC,EAAD,CAjBgB;AAkB1BC,oBAAQ,EAAE,CAAC,EAAD,CAlBgB;AAmB1BC,qBAAS,EAAE,CAAC,EAAD,CAnBe;AAoB1BC,kBAAM,EAAE,CAAC,KAAK9B,IAAL,CAAUpC,EAAX,EAAe,0DAAW8C,QAA1B;AApBkB,WAAd,CAAd;AA4BsP,S,CAAA;AAEtP;AACA;AACA;;;;;qCACQ,CAAW,C,CAEnB;;;;qCAGW;AAAA;;AACT;AACAqB,mBAAO,CAACC,KAAR,CAAc,KAAKzB,WAAL,CAAiB0B,KAA/B;AACA,iBAAK7B,SAAL,GAAiB,IAAjB,CAHS,CAIT;;AACA,gBAAI,KAAKG,WAAL,CAAiB2B,OAArB,EAA8B;AAC5B;AACD,aAFD,MAEO;AACL,mBAAKhC,aAAL,CAAmBiC,SAAnB,CAA6B,KAAK5B,WAAL,CAAiB0B,KAA9C,EAAqDzC,SAArD;AACA,mBAAKN,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACAC,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACC,OAAL;AACD,eAFS,EAEP,IAFO,CAAV;AAGA,mBAAKnC,SAAL,CAAeoC,KAAf;AACD;AACF;;;wCAEU;AACT,iBAAKpC,SAAL,CAAeoC,KAAf;AACD;AAED;;;;;;oCAGO;AACL,gBAAMlD,IAAI,GAAG,KAAKU,QAAL,CAAcyC,aAAd,CAA4B,GAA5B,CAAb;AACAnD,gBAAI,CAACoD,MAAL,GAAc,QAAd;AACApD,gBAAI,CAACqD,IAAL,GAAY5C,oBAAoB,CAAC6C,SAAjC;AACAtD,gBAAI,CAACuD,KAAL;AACAvD,gBAAI,CAACwD,MAAL;AACD;;;8BAhCO;AAAE,mBAAO,KAAKtC,WAAL,CAAiBuC,QAAxB;AAAmC;;;;WA5C7C;AACA;AACA;AACA;;;AACgB,2BAAAH,SAAA,GAAY,6CAAZ;;;yBANL7C,oB,EAAoB,gEAsCX,wDAtCW,C,EAsCH,gEAAsC,wEAAtC,C,EAAqD,2H,EAAA,uI,EAAA,uH,EAAA,sI;AAAA,O;;;cAtCtEA,oB;AAAoB,yC;AAAA,kB;AAAA,gB;AAAA,4iF;AAAA;AAAA;ACfjC;;AAAI;;AAAa;;AAEjB;;AAAgC;AAAA,qBAAY,IAAAiD,QAAA,EAAZ;AAAsB,aAAtB;;AAC9B;;AAAiB;;AAAgB;;AACjC;;AACE;;AACE;;AAAuB;;AAAe;;AACtC;;AAEA;;AAGF;;AACA;;AACE;;AAAqB;;AAAa;;AAClC;;AAEA;;AAGF;;AACF;;AAEA;;AAAiB;;AAAU;;AAC3B;;AACE;;AACE;;AACE;;AAAuB;;AAAK;;AAC5B;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;AAAQ;;AAChC;;AAEA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAoB;;AAAQ;;AAC5B;;AAEA;;AAIF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAW;;AACrC;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAmB;;AAC7C;;AAEA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAAsB;;AAAK;;AAC3B;;AAEA;;AAGF;;AACA;;AACE;;AACE;;AACE;;AAAsB;;AAAa;;AACnC;;AAEA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAuB;;AAAO;;AAC9B;;AAEA;;AAGF;;AACF;;AACF;;AACA;;AAAI;;AAAG;;AAA2B;;AAAI;;AACtC;;AACE;;AACE;;AACE;;AAAuB;;AAAK;;AAC5B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;AAAQ;;AAChC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAoB;;AAAQ;;AAC5B;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAW;;AACrC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAmB;;AAC7C;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsB;;AAAK;;AAC3B;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAsB;;AAAa;;AACnC;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuB;;AAAO;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AAAmD;;AAAS;;AAC5D;;AAAqC;AAAA,qBAAS,IAAAC,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAM;;AACrE;;;;AArKI;;AAAA;;AAEE;;AAAA;;AAME;;AAAA;;AACG;;AAAA;;AAM0E;;AAAA;;AAC7E;;AACG;;AAAA;;AAYD;;AAAA;;AACG;;AAAA;;AASH;;AAAA;;AACG;;AAAA;;AAWsB;;AAAA;;AACtB;;AAAA;;AAUH;;AAAA;;AACG;;AAAA;;AASH;;AAAA;;AACG;;AAAA;;AASP;;AAAA;;AACG;;AAAA;;AASC;;AAAA;;AACG;;AAAA;;AASH;;AAAA;;AACG;;AAAA;;;;;;;;;wEDxFAlD,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTzB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;kBAsCiB0E,Q;AAAU,sBAAF;oBAA3C,oDAA2C;qBAApC,wD;AAAoC;;;;oBAAG,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErDpE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,oB;AAEX;AACA;AACA;AACA,wCAAc;AAAA;AAAG,S,CAEjB;AACA;AACA;;;;;qCACQ,CACP;;;;;;;yBAXUA,oB;AAAoB,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,e;AAAA,gY;AAAA;AAAA;ACPjC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;wEDZaA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT7E,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa4E,mB;AAOX;AACA;AACA;AACA,qCAAoBC,KAApB,EAAmDC,YAAnD,EAAuFC,MAAvF,EAA0G;AAAA;;AAAtF,eAAAF,KAAA,GAAAA,KAAA;AAA+B,eAAAC,YAAA,GAAAA,YAAA;AAAoC,eAAAC,MAAA,GAAAA,MAAA;AAAsB,S,CAE7G;AACA;AACA;;;;;qCACW;AAAA;;AACT,iBAAKF,KAAL,CAAWG,QAAX,CAAoB/D,SAApB,CAA8B,UAAAgE,CAAC,EAAI;AACjC,kBAAM5F,EAAE,GAAG4F,CAAC,CAACC,GAAF,CAAM,IAAN,CAAX;;AACA,oBAAI,CAACJ,YAAL,CAAkBK,OAAlB,CAA0B9F,EAA1B,EACG4B,SADH,CACa,UAACmE,QAAD,EAAc;AACvB,sBAAI,CAACC,IAAL,GAAYD,QAAZ;AACA5B,uBAAO,CAAC8B,GAAR,CAAY,yBAAyBF,QAArC;AACD,eAJH,EAKI,UAACG,KAAD,EAAW;AACT/B,uBAAO,CAAC8B,GAAR,CAAY,gBAAgBC,KAA5B;AACD,eAPL;AAQD,aAVD;AAWD,W,CAED;;;;uCACa;AACX,iBAAKR,MAAL,CAAYS,IAAZ,CAAiB,yFAAjB,EAAuC;AACrCC,oBAAM,EAAE,OAD6B;AAErCC,mBAAK,EAAE,OAF8B;AAGrCjE,kBAAI,EAAE;AACJpC,kBAAE,EAAE,KAAKgG,IAAL,CAAUhG,EADV;AAEJsG,oBAAI,EAAE,KAAKN,IAAL,CAAUM;AAFZ;AAH+B,aAAvC;AAQD;;;;;;;yBAvCUf,mB,EAAmB,+H,EAAA,qI,EAAA,mI;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,6oC;AAAA;AAAA;ACZhC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AAAI;;AAAmC;;AACvC;;AACA;;AAAI;;AAAQ;;AAAa;;AAAS;;AAAgC;;AAClE;;AAAI;;AAAQ;;AAAW;;AAAS;;AAAc;;AAC9C;;AAAI;;AAAQ;;AAAO;;AAAS;;AAAgB;;AAC5C;;AAAI;;AAAQ;;AAAqB;;AAAS;;AAA4B;;AACtE;;AAAI;;AAAQ;;AAA2B;;AAAS;;AAA6B;;AAC7E;;AAAI;;AAAQ;;AAAoB;;AAAS;;AAA0B;;AACnE;;AAAI;;AAAQ;;AAAW;;AAAS;;AAAmB;;AACnD;;AAAI;;AAAQ;;AAAU;;AAAS;;AAAoB;;AACnD;;AAAI;;AAAQ;;AAAO;;AAAU;;AAA6J;;AAC1L;;AACI;;AAAsC;AAAA,qBAAS,IAAAgB,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAQ;;AACrE;;AAAsC;;AAAK;;AACnD;;AACA;;AACI;;AACI;;AACE;;AACA;;AACA;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACA;;AAAsB;;AAAQ;;AAChC;;AACA;;AACE;;AACA;;AAAsB;;AAAI;;AAC5B;;AACF;;AACN;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/CwB;;AAAA;;AACA;;AAAA;;AAE8B;;AAAA;;AACF;;AAAA;;AACJ;;AAAA;;AACc;;AAAA;;AACM;;AAAA;;AACP;;AAAA;;AACT;;AAAA;;AACD;;AAAA;;AACF;;AAAA;;AAcM;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;wEDxB1ChB,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT9E,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBI;;AACI;;AACI;;AACA;;AACI;;AAAuB;;AAAa;;AACpC;;AAAsB;;AAA8C;;AACpE;;AAAiE;;AAAc;;AACnF;;AACJ;;AACJ;;;;;;AAPa;;AAAA;;AAEsB;;AAAA;;AACD;;AAAA;;AACnB;;AAAA;;;;UDnBN6F,a;AAQX;AACA;AACA;AACA,+BAAoBf,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAA+B;;;;qCAE3C;AACN,iBAAKgB,SAAL;AACD,W,CAED;AACA;AACA;;AAEA;;;;;;sCAGY;AAAA;;AACV,iBAAKhB,YAAL,CAAkBiB,QAAlB,GACG9E,SADH,CACa,UAACmE,QAAD,EAAc;AACvB,oBAAI,CAACY,KAAL,GAAaZ,QAAb;AACA5B,qBAAO,CAAC8B,GAAR,CAAY,iBAAiBF,QAA7B;AACD,aAJH,EAKI,UAACG,KAAD,EAAW;AACT/B,qBAAO,CAAC8B,GAAR,CAAY,gBAAgBC,KAA5B;AACD,aAPL;AAQD;;;;;;;yBAjCUM,a,EAAa,qI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,0nB;AAAA;AAAA;ACT1B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAmC;;AAAK;;AAC5C;;AAAI;;AAA2H;;AAAI;;AAAI;;AACvI;;AAAI;;AAAuQ;;AACvQ;;AAAuL;;AACvL;;AAA0K;;AAAQ;;AAAiB;;AAAS;;AAAI;;AAAI;;AAAI;;AACxN;;AAAI;;AAA8B;;AAEtC;;AAAkE;;AAAO;;AAC7E;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAUJ;;;;AAVS;;AAAA;;;;;;;;;wEDbIA,a,EAAa;gBALzB,uDAKyB;iBALf;AACT/F,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CACA;;;UASaiG,Y;AAOX;AACA;AACA;AACA,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB,S,CAEzC;AACA;AACA;;;;;qCACQ;AACN,mBAAO,KAAKA,IAAL,CAAUhB,GAAV,CAAsBe,YAAY,CAACE,iBAAnC,CAAP;AACD;;;kCAEO9G,E,EAAqB;AAC3B,mBAAO,KAAK6G,IAAL,CAAUhB,GAAV,CAAoBe,YAAY,CAACE,iBAAb,GAAiC9G,EAArD,CAAP;AACD;;;;WApBD;AACA;AACA;AACA;;;AACgB,mBAAA8G,iBAAA,GAAoB,+CAApB;;;yBALLF,Y,EAAY,uH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVG,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,a;AAOX;AACA;AACA;AACA,+BAAoBH,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAoB,S,CAExC;AACA;AACA;;;;;oCACUI,M,EAAgB;AACxB,mBAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAuBF,aAAa,CAACF,iBAArC,EAAwDG,MAAxD,CAAP;AACD;;;;WAhBD;AACA;AACA;AACA;;;AACgB,oBAAAH,iBAAA,GAAoB,iDAApB;;;yBALLE,a,EAAa,uH;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVD,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMI,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACdA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAInD,OAAO,CAAC+B,KAAR,CAAcoB,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FlatDetailComponent } from './flat-detail/flat-detail.component';\nimport { HomeComponent } from './home/home.component';\nimport { FlatContactComponent } from './flat-contact/flat-contact.component';\nimport { FlatBookingComponent } from './flat-booking/flat-booking.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'flats/home', component: HomeComponent},\n  {path: 'flats/contact', component: FlatContactComponent},\n  {path: 'flats/:id', component: FlatDetailComponent},\n  {path: 'flats/booking', component: FlatBookingComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webCure';\n}\n","<app-menu></app-menu>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './core/menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FlatDetailComponent } from './flat-detail/flat-detail.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlatBookingComponent } from './flat-booking/flat-booking.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { FlatContactComponent } from './flat-contact/flat-contact.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    FlatDetailComponent,\n    FlatBookingComponent,\n    HomeComponent,\n    FlatContactComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule,\n    MatGridListModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    FlatBookingComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ],\n  providers: [\n    MatDatepickerModule,\n    {provide: LocationStrategy, useClass: HashLocationStrategy}// for refresh browser\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n    <p>Conception site internet diGGler Entertainement Tous droits réservés © 2020 </p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlatDetailComponent } from 'src/app/flat-detail/flat-detail.component';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n  navLinks = [\n    { label: 'Appartements', link: '/flats/home'},\n    { label: 'Le Blue Bay', link: '/flats/0'}, //Add link of menu\n    { label: 'Le Bel Air', link: '/flats/1'},\n    { label: 'Le Rose Hill', link: '/flats/2'},\n    { label: 'Le Floréal', link: '/flats/3'},\n    { label: 'Contact', link: '/flats/contact'}\n  ]\n  activeLinkIndex: number = -1;\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(private router: Router) { }\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  ngOnInit() {\n    this.router.events.subscribe((res) => {\n    this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));//Permet le fonctionnement animation menu\n  });\n  }\n}\n","<nav mat-tab-nav-bar >\n    <a mat-tab-link\n    *ngFor=\"let link of navLinks\"\n    [routerLink]=\"link.link\"\n    routerLinkActive #rla=\"routerLinkActive\"\n    [active]=\"rla.isActive\">\n   {{link.label}}\n  </a>\n  </nav>\n\n","import { DOCUMENT } from '@angular/common';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LodgerService } from '../services/lodger.service';\n\n//----------------------------------------------------------------------------------------\n//COMPONENT FOR MODAL BOOKING NOT IN USE\n//----------------------------------------------------------------------------------------\n@Component({\n  selector: 'app-flat-booking',\n  templateUrl: './flat-booking.component.html',\n  styleUrls: ['./flat-booking.component.scss']\n})\nexport class FlatBookingComponent implements OnInit {\n\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n  //static readonly PDF_LOCAL = \"http://localhost:3000/pdf/\"\n  static readonly PDF_LOCAL = \"https://site-cure-server.herokuapp.com/pdf/\"\n  submitted: boolean = false; // Know if the form has been submit\n  today = new Date();\n\n  contactForm = this.fb.group({\n    id: [null],\n    startDate: ['', Validators.required],\n    endDate: ['', Validators.required],\n    lastName1: ['', Validators.required],\n    firstName1: ['', Validators.required],\n    phoneNumber1: ['', Validators.required],\n    email1: ['', [Validators.required, Validators.email, Validators.pattern]],\n    dateOfBirth1: ['', Validators.required],\n    address1: ['', Validators.required],\n    zipCode1: ['', Validators.required],\n    location1: ['', Validators.required],\n    lastName2: [''],\n    firstName2: [''],\n    phoneNumber2: [''],\n    email2: [''],\n    dateOfBirth2: [''],\n    address2: [''],\n    zipCode2: [''],\n    location2: [''],\n    flatId: [this.data.id, Validators.required]\n  });\n\n  \n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(@Inject(DOCUMENT) private document: Document, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder, private lodgerService: LodgerService, private router: Router, private dialogRef: MatDialogRef<FlatBookingComponent>) { }// Inject data from method openDialog()\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  ngOnInit(): void {}\n\n  // convenience getter for easy access to form fields\n  get f() { return this.contactForm.controls; }\n\n  onSubmit() {\n    // Possibilité: utiliser un EventEmitter avec la valeur du formulaire\n    console.table(this.contactForm.value);\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.contactForm.invalid) {\n      return;\n    } else {\n      this.lodgerService.addLodger(this.contactForm.value).subscribe();\n      this.router.navigate(['/']);\n      setTimeout(() => { // Time for waiting the lodger have to be saved \n        this.loadPdf()\n      }, 2000);\n      this.dialogRef.close();\n    }\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  /*\n  * Open pdf / Inject Document / Necessary for open refresh browser\n  */\n  loadPdf(): void {\n    const link = this.document.createElement('a');\n    link.target = '_blank';\n    link.href = FlatBookingComponent.PDF_LOCAL;\n    link.click();\n    link.remove();\n  }\n}\n","<h2>{{data.name}}</h2>\n\n<form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n  <h5 class=\"mt-3\">Dates souhaitées</h5>\n  <div class=\"row mt-2 d-flex justify-content-around\">\n    <div class=\"form-group\">\n      <label for=\"startDate\">Date de début :</label>\n      <input class=\"form-control\" type=\"date\" id=\"startDate\" formControlName=\"startDate\"\n        [ngClass]=\"{'is-invalid': submitted && f.startDate.errors}\">\n      <div *ngIf=\"submitted && f.startDate.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.startDate.errors.required\">La date de début doit être saisie</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"endDate\">Date de fin :</label>\n      <input class=\"form-control\" type=\"date\" id=\"endDate\" formControlName=\"endDate\" min=\"{{contactForm.value.startDate}}\"\n        [ngClass]=\"{'is-invalid': submitted && f.endDate.errors}\">\n      <div *ngIf=\"submitted && f.endDate.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.endDate.errors.required\">La date de fin doit être saisie</div>\n      </div>\n    </div>\n  </div>\n\n  <h5 class=\"mt-3\">Locataires</h5>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"lastName1\">Nom :</label>\n        <input class=\"form-control\" type=\"text\" id=\"lastName1\" formControlName=\"lastName1\"\n          [ngClass]=\"{'is-invalid': submitted && f.lastName1.errors}\">\n        <div *ngIf=\"submitted && f.lastName1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.lastName1.errors.required\">Le nom doit être saisi</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"firstName1\">Prénom :</label>\n        <input class=\"form-control\" type=\"text\" id=\"firstName1\" formControlName=\"firstName1\"\n          [ngClass]=\"{'is-invalid': submitted && f.firstName1.errors}\">\n        <div *ngIf=\"submitted && f.firstName1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.firstName1.errors.required\">Le prénom doit être saisi</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"email1\">E-mail :</label>\n        <input class=\"form-control\" type=\"email\" pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z]{2,4}$\" id=\"email1\"\n          formControlName=\"email1\" [ngClass]=\"{'is-invalid': submitted && f.email1.errors}\">\n        <div *ngIf=\"submitted && f.email1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.email1.errors.required\">L'adresse e-mail doit être saisie</div>\n          <div *ngIf=\"f.email1.errors.pattern\">L'adresse e-mail n'est pas valide</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"phoneNumber1\">Téléphone :</label>\n        <input class=\"form-control\" type=\"tel\" id=\"phoneNumber1\" formControlName=\"phoneNumber1\"\n          [ngClass]=\"{'is-invalid': submitted && f.phoneNumber1.errors}\">\n        <div *ngIf=\"submitted && f.phoneNumber1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.phoneNumber1.errors.required\">La date de naissance doit être saisie</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"dateOfBirth1\">Date de naissance :</label>\n        <input class=\"form-control\" type=\"date\" id=\"dateOfBirth1\" formControlName=\"dateOfBirth1\"\n          [ngClass]=\"{'is-invalid': submitted && f.dateOfBirth1.errors}\">\n        <div *ngIf=\"submitted && f.dateOfBirth1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.dateOfBirth1.errors.required\">La date de naissance doit être saisie</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"address1\">Rue :</label>\n    <input class=\"form-control\" type=\"text\" id=\"address1\" formControlName=\"address1\"\n      [ngClass]=\"{'is-invalid': submitted && f.address1.errors}\">\n    <div *ngIf=\"submitted && f.address1.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.address1.errors.required\">L'adresse doit être saisie</div>\n    </div>\n  </div>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"zipCode1\">Code postal :</label>\n        <input class=\"form-control\" type=\"text\" id=\"zipCode1\" formControlName=\"zipCode1\"\n          [ngClass]=\"{'is-invalid': submitted && f.zipCode1.errors}\">\n        <div *ngIf=\"submitted && f.zipCode1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.zipCode1.errors.required\">Le code postal doit être saisi</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"location1\">Ville :</label>\n        <input class=\"form-control\" type=\"text\" id=\"location1\" formControlName=\"location1\"\n          [ngClass]=\"{'is-invalid': submitted && f.location1.errors}\">\n        <div *ngIf=\"submitted && f.location1.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.location1.errors.required\">La ville doit être saisie</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <h6><i>(2eme Personne Facultative)</i></h6>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"lastName2\">Nom :</label>\n        <input class=\"form-control\" type=\"text\" id=\"lastName2\" formControlName=\"lastName2\">\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"firstName2\">Prénom :</label>\n        <input class=\"form-control\" type=\"text\" id=\"firstName2\" formControlName=\"firstName2\">\n      </div>\n    </div>\n  </div>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"email2\">E-mail :</label>\n        <input class=\"form-control\" type=\"email\" pattern=\"[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+.[a-zA-Z.]{2,15}\" id=\"email2\"\n          formControlName=\"email2\">\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"phoneNumber2\">Téléphone :</label>\n        <input class=\"form-control\" type=\"tel\" id=\"phoneNumber2\" formControlName=\"phoneNumber2\">\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"dateOfBirth2\">Date de naissance :</label>\n        <input class=\"form-control\" type=\"date\" id=\"dateOfBirth2\" formControlName=\"dateOfBirth2\">\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"address2\">Rue :</label>\n    <input class=\"form-control\" type=\"text\" id=\"address2\" formControlName=\"address2\">\n  </div>\n  <div class=\"row mx-md\">\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"zipCode2\">Code postal :</label>\n        <input class=\"form-control\" type=\"text\" id=\"zipCode2\" formControlName=\"zipCode2\">\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"form-group\">\n        <label for=\"location2\">Ville :</label>\n        <input class=\"form-control\" type=\"text\" id=\"location2\" formControlName=\"location2\">\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-outline-info\">Soumettre</button>\n  <button class=\"btn btn-outline ml-2\" (click)=\"closeDialog()\">Fermer</button>\n</form>\n\n<!--<mat-form-field appearance=\"fill\">\n  <mat-label>Entrer votre nom</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"name\">\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Entrer votre numéro</mat-label>\n  <input matInput type=\"tel\" [(ngModel)]=\"phone\">\n</mat-form-field>\n<br>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Entrer vos dates de réservation</mat-label>\n  <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n    <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\n    <input matEndDate formControlName=\"end\" placeholder=\"End date\">\n  </mat-date-range-input>\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-date-range-picker #picker></mat-date-range-picker>\n\n  <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n  <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n</mat-form-field>\n<br>\n<div class=\"button\">\n  <button mat-flat-button (click)=\"sendForm()\">ENVOYER</button>\n  <button mat-flat-button>ANNULER</button>\n</div>-->\n<!--<p>Selected range: {{range.value | json}}</p>-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-flat-contact',\n  templateUrl: './flat-contact.component.html',\n  styleUrls: ['./flat-contact.component.scss']\n})\nexport class FlatContactComponent implements OnInit {\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor() { }\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <div class=\"gradientBackground\">\n        <div class=\"container flex-center\">\n            <div class=\"row flex-center pt-5 \">\n                <div class=\"col-12 col-md-6 text-center text-md-left margins\">\n                    <h1>Nous contacter</h1>\n                    <img class=\"avatar rounded-circle\" width=\"50px\" src=\"./assets/icon.png\" />\n                    Marie Gabrielle: 06 34 48 97 82\n                    <br>\n                    <br>\n                    <img class=\"avatar rounded-circle\" width=\"50px\" src=\"./assets/icon.png\" />\n                    Jean-Christophe: 06 63 56 96 71\n                </div>\n                <div class=\"col-12 col-md-6 d-flex align-items-center justify-content-center\">\n                    <img class=\"logo\" src=\"./assets/logo.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Flat } from '../beans/flat';\nimport { FlatsService } from '../services/flats.service';\nimport { FlatBookingComponent } from '../flat-booking/flat-booking.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-flat-detail',\n  templateUrl: './flat-detail.component.html',\n  styleUrls: ['./flat-detail.component.scss']\n})\nexport class FlatDetailComponent implements OnInit {\n\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n  flat: Flat;\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(private route: ActivatedRoute, private flatsService: FlatsService, private dialog: MatDialog) { }\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  ngOnInit() {\n    this.route.paramMap.subscribe(p => {\n      const id = p.get('id');\n      this.flatsService.getFlat(id)\n        .subscribe((response) => {\n          this.flat = response;\n          console.log(\"Connexion Serveur ok\" + response);\n        },\n          (error) => {\n            console.log(\"Erreur Http\" + error);\n          });\n    })\n  }\n\n  //Not in use for flat-booking component\n  openDialog() {\n    this.dialog.open(FlatBookingComponent, {\n      height: '600px',\n      width: '600px',\n      data: { \n        id: this.flat.id,\n        name: this.flat.name\n      }\n    });\n  }\n}\n","<section>\n    <div class=\"gradientBackground\">\n        <div class=\"container flex-center\">\n            <div class=\"row flex-center pt-5 \">\n                <div class=\"col-12 col-md-6 text-center text-md-left margins\">\n                    <h1>{{flat?.name}}</h1>\n                    <h5>{{flat?.type}} à {{flat?.location}}</h5>\n                    <br>\n                    <h6><strong>Appartement: </strong>{{flat?.type}} de {{flat?.area}}</h6>\n                    <h6><strong>Couchages: </strong>{{flat?.bed}} </h6>\n                    <h6><strong>Étage: </strong>{{flat?.floor}} </h6>\n                    <h6><strong>Équipements Cuisine: </strong>{{flat?.kitchenEquipments}} </h6>\n                    <h6><strong>Équipements Salle de Bain: </strong>{{flat?.bathRoomEquipments}} </h6>\n                    <h6><strong>Autres équipements: </strong>{{flat?.otherEquipments}} </h6>\n                    <h6><strong>Extérieur: </strong>{{flat?.exterior}} </h6>\n                    <h6><strong>Pratique: </strong>{{flat?.practical}} </h6>\n                    <h6><strong>Tarif: </strong> de {{flat?.lowSeason}}€ à {{flat?.pickSeason}}€ les trois semaines, selon la période. Taxe de séjour 1.30€ par personne par jour. Chèques vacances acceptés. </h6>\n                    <br>\n                        <button class=\"btn btn-outline-light\" (click)=\"openDialog()\">RESERVER</button><!--Ouverture pour futur formulaire de reservation-->\n                        <button class=\"btn btn-outline-light\">SHARE</button>\n                </div>\n                <div class=\"col-12 col-md-6 d-flex align-items-center justify-content-center\">\n                    <div id=\"carouselIndicators\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\" data-interval=\"5000\">\n                        <ol class=\"carousel-indicators\">\n                          <li data-target=\"#carouselIndicators\" data-slide-to=\"0\" class=\"active\"></li>\n                          <li data-target=\"#carouselIndicators\" data-slide-to=\"1\"></li>\n                          <li data-target=\"#carouselIndicators\" data-slide-to=\"2\"></li>\n                        </ol>\n                        <div class=\"carousel-inner\">\n                          <div class=\"carousel-item active\">\n                            <img class=\"d-block w-100\" src=\"{{flat?.photo1}}\" alt=\"Photo Appartement\">\n                          </div>\n                          <div class=\"carousel-item\">\n                            <img class=\"d-block w-100\" src=\"{{flat?.photo2}}\" alt=\"Photo Appartement\">\n                          </div>\n                          <div class=\"carousel-item\">\n                            <img class=\"d-block w-100\" src=\"{{flat?.photo3}}\" alt=\"Photo Appartement\">\n                          </div>\n                        </div>\n                        <a class=\"carousel-control-prev\" href=\"#carouselIndicators\" role=\"button\" data-slide=\"prev\">\n                          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                          <span class=\"sr-only\">Previous</span>\n                        </a>\n                        <a class=\"carousel-control-next\" href=\"#carouselIndicators\" role=\"button\" data-slide=\"next\">\n                          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                          <span class=\"sr-only\">Next</span>\n                        </a>\n                      </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Flat } from '../beans/flat';\nimport { FlatsService } from '../services/flats.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n\n  flats: Flat[];\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(private flatsService: FlatsService) { }\n\n  ngOnInit(){\n    this.loadFlats();\n  }\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n\n  /*\n  * Load all flats\n  */\n  loadFlats() {\n    this.flatsService.getFlats()\n      .subscribe((response) => {\n        this.flats = response;\n        console.log(\"Connexion ok\" + response);\n      },\n        (error) => {\n          console.log(\"Erreur Http\" + error);\n        });\n  }\n}\n","<section>\n    <div class=\"gradientBackground\">\n        <div class=\"container flex-center\">\n            <div class=\"row flex-center pt-5 \">\n                <div class=\"col-12 col-md-6 text-center text-md-left margins\">\n                    <h1>Votre Location à Bagnoles de l'Orne</h1><br>\n                    <h5>Besoin de faire une pause ? De vous détendre ou simplement de vous ressourcer ? Venez nous rejoindre à Bagnoles de l’Orne !<br><br></h5>\n                    <h6>Profitez de votre séjour pour vous oxygéner lors de balades en pleine nature dans la forêt des Andaines, pour découvrir les richesses gastronomiques de la Normandie, et pour recharger les batteries aux Thermes de cette station à la richesse historique incroyable.<br>\n                        Le parc du Château et son parcours de santé, le mini-golf et les pédalos des abords du lac, le Casino… Cette cité thermale a forcément de quoi satisfaire les petits comme les grands !<br>\n                        Pour profiter au mieux de votre séjour, venez loger chez nous ! On vous promet que vous vous sentirez comme chez vous, et ce dans n'importe lequel de nos logements, tous <strong>classés 3 étoiles</strong>... <br><br></h6>\n                        <h5>À vous Les Clefs de Bagnoles !</h5>\n                    \n                    <button class=\"btn btn-outline-light\" routerLink=\"/flats/contact\">Contact</button>\n                </div>\n                <div class=\"col-12 col-md-6 d-flex align-items-center justify-content-center\">\n                    <img class=\"logo\" src=\"./assets/logo.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<section class=\"rowCard\">\n    <div *ngFor=\"let flat of flats\">\n        <div class=\"card shadow p-1 mb-4\" style=\"width: 18rem;\">\n            <img src=\"{{flat.photo1}}\" class=\"card-img-top\" alt=\"Photo Appartement\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{flat.name}}</h5>\n                <h6 class=\"card-text\">{{flat.type}} à partir de {{flat.lowSeason}} €</h6>\n                <a routerLink=\"/flats/{{flat.id}}\" class=\"btn btn-outline-dark\" >En Savoir Plus</a>\n            </div>\n        </div>\n    </div>\n</section>","import { Injectable } from '@angular/core';\n//import { FLATS} from '../datas/listFlat';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Flat } from '../beans/flat';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlatsService {\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n  //static readonly REST_SERVER_LOCAL = \"http://localhost:3000/flats/\"\n  static readonly REST_SERVER_LOCAL = \"https://site-cure-server.herokuapp.com/flats/\"\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(private http: HttpClient) { }\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  getFlats(): Observable<Flat[]> {\n    return this.http.get<Flat[]>(FlatsService.REST_SERVER_LOCAL);\n  }\n\n  getFlat(id: string | number) {\n    return this.http.get<Flat>(FlatsService.REST_SERVER_LOCAL + id);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Lodger } from '../beans/lodger';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LodgerService {\n  //----------------------------------------------------------------------------------------\n  //ATTRIBUTS\n  //----------------------------------------------------------------------------------------\n  //static readonly REST_SERVER_LOCAL = \"http://localhost:3000/lodgers/\"\n  static readonly REST_SERVER_LOCAL = \"https://site-cure-server.herokuapp.com/lodgers/\"\n\n  //----------------------------------------------------------------------------------------\n  //CONSTRUCTOR\n  //----------------------------------------------------------------------------------------\n  constructor(private http: HttpClient) {}\n\n  //----------------------------------------------------------------------------------------\n  //METHODS\n  //----------------------------------------------------------------------------------------\n  addLodger(lodger: Lodger) {\n    return this.http.post<Lodger>(LodgerService.REST_SERVER_LOCAL, lodger);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}