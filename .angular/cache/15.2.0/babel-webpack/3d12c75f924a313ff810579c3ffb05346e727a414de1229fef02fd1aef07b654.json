{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@fortawesome/angular-fontawesome';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport * as i1 from 'ngx-sharebuttons';\nimport { SHARE_BUTTONS_CONFIG, ShareModule } from 'ngx-sharebuttons';\nfunction ShareButton_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"fa-icon\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r2.icon || _r0.icon)(\"fixedWidth\", true);\n  }\n}\nfunction ShareButton_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.text || _r0.text, \" \");\n  }\n}\nfunction ShareButton_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, ShareButton_div_2_div_1_Template, 2, 2, \"div\", 4);\n    i0.ɵɵtemplate(2, ShareButton_div_2_div_2_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showIcon && _r0.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showText);\n  }\n}\nlet ShareButton = /*#__PURE__*/(() => {\n  class ShareButton {\n    constructor(_share) {\n      this._share = _share;\n      /** Show button icon */\n      this.showIcon = true;\n      /** Show button text */\n      this.showText = false;\n      /** Button size */\n      this.size = this._share.config.size;\n      /** Button theme */\n      this.theme = this._share.config.theme;\n      /** Stream that emits when share dialog is opened */\n      this.opened = new EventEmitter();\n      /** Stream that emits when share dialog is closed */\n      this.closed = new EventEmitter();\n    }\n    /** Set theme as button class */\n    get buttonClass() {\n      return `sb-button sb-${this.theme}`;\n    }\n  }\n  ShareButton.ɵfac = function ShareButton_Factory(t) {\n    return new (t || ShareButton)(i0.ɵɵdirectiveInject(i1.ShareService));\n  };\n  ShareButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ShareButton,\n    selectors: [[\"share-button\"]],\n    hostVars: 2,\n    hostBindings: function ShareButton_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.buttonClass);\n      }\n    },\n    inputs: {\n      button: \"button\",\n      url: \"url\",\n      title: \"title\",\n      description: \"description\",\n      image: \"image\",\n      tags: \"tags\",\n      autoSetMeta: \"autoSetMeta\",\n      showIcon: \"showIcon\",\n      showText: \"showText\",\n      text: \"text\",\n      icon: \"icon\",\n      size: \"size\",\n      theme: \"theme\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      opened: \"opened\",\n      closed: \"closed\"\n    },\n    decls: 3,\n    vars: 15,\n    consts: [[\"type\", \"button\", 1, \"sb-wrapper\", 3, \"shareButton\", \"url\", \"image\", \"title\", \"description\", \"tags\", \"autoSetMeta\", \"disabled\", \"opened\", \"closed\"], [\"btn\", \"shareButton\"], [\"class\", \"sb-content\", 4, \"ngIf\"], [1, \"sb-content\"], [\"class\", \"sb-icon\", 4, \"ngIf\"], [\"class\", \"sb-text\", 4, \"ngIf\"], [1, \"sb-icon\"], [3, \"icon\", \"fixedWidth\"], [1, \"sb-text\"]],\n    template: function ShareButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"opened\", function ShareButton_Template_button_opened_0_listener($event) {\n          return ctx.opened.emit($event);\n        })(\"closed\", function ShareButton_Template_button_closed_0_listener($event) {\n          return ctx.closed.emit($event);\n        });\n        i0.ɵɵtemplate(2, ShareButton_div_2_Template, 3, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵstyleProp(\"font-size\", (1 + ctx.size / 20) * 14, \"px\");\n        i0.ɵɵclassProp(\"sb-show-icon\", ctx.showIcon)(\"sb-show-text\", ctx.showText);\n        i0.ɵɵproperty(\"shareButton\", ctx.button)(\"url\", ctx.url)(\"image\", ctx.image)(\"title\", ctx.title)(\"description\", ctx.description)(\"tags\", ctx.tags)(\"autoSetMeta\", ctx.autoSetMeta)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0);\n      }\n    },\n    dependencies: [i2.FaIconComponent, i1.ShareDirective, i3.NgIf],\n    styles: [\"[_nghost-%COMP%]{--sb-margin: .3125em}\"],\n    changeDetection: 0\n  });\n  return ShareButton;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ShareButtonModule = /*#__PURE__*/(() => {\n  class ShareButtonModule {\n    static withConfig(config) {\n      return {\n        ngModule: ShareButtonModule,\n        providers: [{\n          provide: SHARE_BUTTONS_CONFIG,\n          useValue: config\n        }]\n      };\n    }\n  }\n  ShareButtonModule.ɵfac = function ShareButtonModule_Factory(t) {\n    return new (t || ShareButtonModule)();\n  };\n  ShareButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ShareButtonModule\n  });\n  ShareButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[ShareModule, FontAwesomeModule, CommonModule], ShareModule, FontAwesomeModule]\n  });\n  return ShareButtonModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ShareButton, ShareButtonModule };\n//# sourceMappingURL=ngx-sharebuttons-button.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}